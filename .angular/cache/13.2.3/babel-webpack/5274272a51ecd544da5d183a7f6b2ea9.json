{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError } from 'rxjs/operators';\nimport { FireBaseURL } from '../shared/FirebaseURL';\nlet MealsRequestsService = class MealsRequestsService {\n  constructor(http, errorService, db) {\n    this.http = http;\n    this.errorService = errorService;\n    this.db = db;\n  }\n\n  getMealsRequests() {\n    const MealsRequestsRef = this.db.list(\"MealsRequests\");\n    return MealsRequestsRef.valueChanges();\n  }\n\n  getMealsRequestByID(ID) {\n    return this.http.get(FireBaseURL + \"MealsRequests/\" + ID + \".json\").pipe(catchError(this.errorService.handleError));\n  }\n\n  updateMealsRequest(MealsRequest) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      })\n    };\n    this.http.put(FireBaseURL + \"MealsRequests/\" + MealsRequest.ID + \".json\", MealsRequest, httpOptions).pipe(catchError(this.errorService.handleError));\n  }\n\n  saveMealsRequest(MealsRequest) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      })\n    };\n    return this.http.post(FireBaseURL + \"MealsRequests.json\", MealsRequest, httpOptions).pipe(catchError(this.errorService.handleError));\n  }\n\n  deleteMealsRequest(ID) {\n    return this.http.delete(FireBaseURL + \"MealsRequests/\" + ID + \".json\").pipe(catchError(this.errorService.handleError));\n  }\n\n};\nMealsRequestsService = __decorate([Injectable({\n  providedIn: 'root'\n})], MealsRequestsService);\nexport { MealsRequestsService };","map":null,"metadata":{},"sourceType":"module"}